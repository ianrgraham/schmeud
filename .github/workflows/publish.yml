name: publish

on:
  pull_request:
  push:
    branches: [main]

jobs:
  linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: [x86_64] # , i686
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: 'true'  
    - uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        architecture: x64
    - name: Build wheels
      uses: PyO3/maturin-action@v1
      with:
        target: ${{ matrix.target }}
        manylinux: 2014
        before-script-linux: |
          yum install -y openssl-devel
        docker-options: |
          -e OPENSSL_STATIC
        args: --release --out dist --find-interpreter
    - name: Upload wheels
      uses: actions/upload-artifact@v3
      with:
        name: wheels
        path: dist

  # windows:
  #   runs-on: windows-latest
  #   strategy:
  #     matrix:
  #       target: [x64, x86]
  #   steps:
  #     - uses: actions/checkout@v3
  #       with:
  #         submodules: 'true'  
  #     - uses: actions/setup-python@v4
  #       with:
  #         python-version: '3.10'
  #         architecture: ${{ matrix.target }}
  #     - name: Build wheels
  #       uses: PyO3/maturin-action@v1
  #       with:
  #         target: ${{ matrix.target }}
  #         args: --release --out dist --find-interpreter
  #         sccache: 'true'
  #     - name: Upload wheels
  #       uses: actions/upload-artifact@v3
  #       with:
  #         name: wheels
  #         path: dist

  # macos:
  #   runs-on: macos-latest
  #   strategy:
  #     matrix:
  #       target: [x86_64, aarch64]
  #   steps:
  #     - uses: actions/checkout@v3
  #       with:
  #         submodules: 'true'  
  #     - uses: actions/setup-python@v4
  #       with:
  #         python-version: '3.10'
  #     - name: Build wheels
  #       uses: PyO3/maturin-action@v1
  #       with:
  #         target: ${{ matrix.target }}
  #         args: --release --out dist --find-interpreter
  #         sccache: 'true'
  #     - name: Upload wheels
  #       uses: actions/upload-artifact@v3
  #       with:
  #         name: wheels
  #         path: dist

  release:
    runs-on: ubuntu-latest
    if: "startsWith(github.ref, 'refs/tags/')"
    needs: [linux] # , windows, macos
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: wheels
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Publish to PyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.TESTPYPI_PASSWORD }}
        run: |
          pip install --upgrade twine
          twine upload --verbose --repository-url https://test.pypi.org/legacy/ --skip-existing *

